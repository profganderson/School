/*
 * DatalogProgram.cpp
 *
 *  Created on: Jul 8, 2015
 *      Author: mocklera
 */

#include <sstream>
#include "DatalogProgram.h"

DatalogProgram::DatalogProgram() {
	// TODO Auto-generated constructor stub

}

DatalogProgram::~DatalogProgram() {
	// TODO Auto-generated destructor stub
}

std::string DatalogProgram::predicate_vector_to_string(std::vector<Predicate*> vec) {
	std::stringstream o;

	return o.str();
}

std::string DatalogProgram::to_string() {
	std::stringstream prog;

	// Schemes
	int num_schemes = schemes.size();
	prog << "Schemes(" << num_schemes << "):\n";
	for (int i = 0; i < num_schemes; i++)
	{
		prog << "\t" << schemes.at(i)->to_string() << std::endl;
	}

	// Facts
	int num_facts = facts.size();
	prog << "Facts(" << num_facts << "):\n";
	for (int i = 0; i < num_facts; i++)
	{
		prog << "\t" << facts.at(i)->to_string() << std::endl;
	}

	// Rules
	int num_rules = rules.size();
	prog << "Rules(" << num_rules << "):\n";
	for (int i = 0; i < num_rules; i++)
	{
		Rule * rule = rules.at(i);
		prog << "\t" << rule->head->to_string() << " :- ";

		int body_size = rule->body.size();
		for (int i = 0; i < body_size; i++)
		{
			prog << rule->body.at(i)->to_string();
			if (i != (body_size - 1))
				prog << ",";
		}
		prog << std::endl;
		rule = NULL;
	}

	// Queries
	int num_queries = queries.size();
	prog << "Queries(" << num_queries << "):\n";
	for (int i = 0; i < num_queries; i++)
	{
		prog << "\t" << queries.at(i)->to_string() << std::endl;
	}

	// Domain
	int domain_size = domain.size();
	prog << "Domain(" << domain_size << "):\n";
	for (std::string item : domain)
	{
		prog << "\t" << item << std::endl;
	}

	return prog.str();
}
