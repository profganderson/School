/*
 * Database.h
 *
 *  Created on: Jul 27, 2015
 *      Author: mocklera
 */

#ifndef DATABASE_H_
#define DATABASE_H_

#include <string>
#include <map>
#include "DatalogProgram.h"
#include "Relation.h"

class Database {
public:
	Database();
	virtual ~Database();
	void load(DatalogProgram program);
	void evaluate_schemes();
	void evaluate_facts();
	std::string evaluate_rules();
	std::string evaluate_queries();
	std::string relations_to_string();

private:
	DatalogProgram program;
	std::map<std::string, Relation> relations;
	void add_scheme(int index);
	void add_fact(int index);
	void add_relation_to_map(std::string name, Relation relation);
	Relation get_relation(std::string name);
	Relation query_project(Relation r, int index);
	Relation query_rename(Relation r, int index);
	Scheme join_scheme(Scheme s1, Scheme s2);

	Relation select(Relation r, std::vector<Parameter> params);
	Relation project(Relation r, std::vector<Parameter> params);
	Relation project_rule(Relation r, std::vector<Parameter> params);
	Relation rename(Relation r, std::vector<Parameter> params);
	Relation join(std::vector<Relation> relations);
	Relation r_union();

	int total_tuples();
};

#endif /* DATABASE_H_ */

// For each rule that is evaluated, output the rule
// followed by the tuples generated by the rule. Output the rule in the same form that it appears in a Datalog program. Output each tuple in the same form as in the previous project. Output the tuples after the last step of the evaluation of the rule, after the attributes have been renamed to be union compatible with the relation that matches the head of the rule. Only output the tuples that don't already exist in the result relation.
//
//After outputting all the evaluated rules, output a blank line followed by a line with the string,
//
//Converged after n passes through the Rules.
//where n is the number of times the fixed-point algorithm evaluated the rules before it converged to a solution.
//
//Finally, output a blank line followed by the contents of the relations in the database in the same form used in the last project.
